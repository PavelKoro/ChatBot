import streamlit as st
import requests
import re

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ß–∞—Ç –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤",
    page_icon="üí¨",
)

# URL –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —á–∞—Ç–±–æ—Ç–æ–º
CHATBOT_URL = "http://localhost:9070/chatbot"
FILES_URL = "http://localhost:9070/files"
DELETE_URL = "http://localhost:9070/delete/"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'users_db' not in st.session_state:
    st.session_state['users_db'] = {}
if 'current_user' not in st.session_state:
    st.session_state['current_user'] = None
if 'authenticated' not in st.session_state:
    st.session_state['authenticated'] = False
if 'messages' not in st.session_state:
    st.session_state['messages'] = []

def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    return re.match(pattern, email) is not None

def register_user(email, password):
    try:
        response = requests.post("http://localhost:9070/reg", json={"email": email, "password": password})
        response_data = response.json()
        
        if response.status_code == 200 and response_data.get("isRegister") == "true":
            st.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            st.session_state['page'] = 'chatbot'
        else:
            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}")

def login_user(email, password):
    try:
        response = requests.post("http://localhost:9070/auth", json={"email": email, "password": password})
        response_data = response.json()
        
        if response.status_code == 200 and response_data.get("id") != "0":
            st.success("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
            st.session_state['current_user'] = response_data.get("id")
            st.session_state['authenticated'] = True
            st.session_state['page'] = 'chatbot'
        else:
            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}")

def send_file_to_api(user_id, file):
    try:
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        files = {'file': (file.name, file.getbuffer(), file.type)}
        data = {'user_id': str(user_id)}  # –ü–µ—Ä–µ–¥–∞—á–∞ user_id –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ API
        response = requests.post("http://localhost:9070/upload", files=files, data=data)
        
        if response.status_code == 200:
            st.success("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
        else:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {response.status_code}")
    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}")

def send_question_to_chatbot(user_id, query):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–∞—Ç–±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç."""
    try:
        response = requests.post(CHATBOT_URL, json={"user_id": user_id, "query": query})
        if response.status_code == 200:
            return response.json().get("response", "–ß–∞—Ç–±–æ—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª.")
        else:
            return f"–û—à–∏–±–∫–∞: {response.status_code}"
    except requests.exceptions.RequestException as e:
        return f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}"

def get_user_files(user_id):
    try:
        response = requests.get("http://localhost:9070/files", params={"user_id": user_id})
        if response.status_code == 200:
            files = response.json().get("files", [])
            return files
        else:
            st.error(f"–û—à–∏–±–∫–∞: {response.status_code}")
            return []
    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}")
        return []

def delete_user_file(user_id, filename):
    try:
        response = requests.delete(f"{DELETE_URL}{filename}", params={"user_id": user_id})
        if response.status_code == 200:
            st.success(f"–§–∞–π–ª '{filename}' —É–¥–∞–ª–µ–Ω.")
        else:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {response.status_code}")
    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}")

# –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
page = st.sidebar.radio("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞", ["–ì–ª–∞–≤–Ω–∞—è", "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "Chatbot", "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª"])

# –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
if page == "–ì–ª–∞–≤–Ω–∞—è":
    st.title("–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    st.write("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")

elif page == "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è":
    st.title("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    email = st.text_input("Email")
    password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")

    if st.button("–í–æ–π—Ç–∏"):
        if not email or not password:
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.")
        elif not is_valid_email(email):
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.")
        else:
            login_user(email, password)

elif page == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è":
    st.title("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    email = st.text_input("Email")
    password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
    
    if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
        if not email or not password:
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.")
        elif not is_valid_email(email):
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.")
        else:
            register_user(email, password)

elif page == "Chatbot" and st.session_state['authenticated']:
    st.title("–ß–∞—Ç–±–æ—Ç")
    # st.write(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {st.session_state['current_user']}!")

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
    if prompt := st.chat_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:"):
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
        st.session_state.messages.append({"role": "user", "content": prompt})

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        with st.chat_message("user"):
            st.markdown(prompt)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ —á–∞—Ç–±–æ—Ç—É –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        assistant_response = send_question_to_chatbot(st.session_state['current_user'], prompt)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        with st.chat_message("assistant"):
            st.markdown(assistant_response)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
        st.session_state.messages.append({"role": "assistant", "content": assistant_response})

elif page == "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª" and st.session_state['authenticated']:
    st.title("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª")
    user_id = int(st.session_state['current_user'])
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", type="txt")
    
    if uploaded_file is not None:
        file_content = uploaded_file.read().decode("utf-8")
        st.text_area("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:", file_content, height=200)
        
        if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä"):
            send_file_to_api(user_id, uploaded_file)

    st.subheader("–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤:")
    files = get_user_files(user_id)
    
    if files:
        for file in files:
            col1, col2 = st.columns([3, 1])
            with col1:
                st.write(file)
            with col2:
                if st.button("–£–¥–∞–ª–∏—Ç—å", key=file):
                    delete_user_file(user_id, file)
    else:
        st.write("–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.")

else:
    st.warning("–í—ã –µ—â–µ –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å.")
